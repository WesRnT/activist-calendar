---
// Component Imports
import dayjs from "dayjs";

import Header from "../components/Header";
import NextEventSection from "../components/NextEventSection";
import RecentEventsSection from "../components/RecentEventsSection";
import Footer from "../components/Footer";
import { EventType } from "../components/EventEntry";
import { FrontmatterConfig, FrontmatterEvent } from "../types";

const {
  frontmatter: {
    application: { title, description },
    footer: { contactUs },
  },
} = (await Astro.glob<FrontmatterConfig>("../config.md"))[0];

const toEventType = (frontmatter: FrontmatterEvent): EventType => ({
  title: frontmatter.title,
  date: dayjs(frontmatter.date).format("M/D"),
});

const allEvents = await Astro.glob<FrontmatterEvent>("../events/*.md");

const nextEvents = allEvents
  .filter((e) => dayjs(e.frontmatter.date).isAfter(dayjs()))
  .sort((a, b) => dayjs(a.frontmatter.date).diff(dayjs(b.frontmatter.date)));

const nextEvent =
  nextEvents.length > 0 ? toEventType(nextEvents[0].frontmatter) : null;

const recentEvents = allEvents
  .filter((e) => dayjs(e.frontmatter.date).isBefore(dayjs()))
  .sort((a, b) => dayjs(b.frontmatter.date).diff(dayjs(a.frontmatter.date)))
  .map((e) => toEventType(e.frontmatter));

// Full Astro Component Syntax:
// https://docs.astro.build/core-concepts/astro-components/
---

<html lang="en" class="h-screen">
  <head class="m-0">
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
  </head>

  <body class="m-0 p-4 h-screen bg-gray-50">
    <div class="container mx-auto flex flex-col gap-8 h-full">
      <div class="flex-1 flex flex-col gap-16">
        <Header {...{ title, description }} />
        <NextEventSection event={nextEvent} />
        <RecentEventsSection events={recentEvents} />
      </div>

      <div>
        <Footer {...{ title, contactUs }} />
      </div>
    </div>
  </body>
</html>
